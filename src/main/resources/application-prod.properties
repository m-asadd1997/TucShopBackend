spring.jpa.show-sql = true
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect


spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=anashasan09@gmail.com
#spring.mail.password=

# Other properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=

#mvn clean install -Dspring.profiles.active=prod  use to build
spring.profiles.active=prod
profile.doc = PROD
# SSL, post 465
#spring.mail.properties.mail.smtp.socketFactory.port = 465
#spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update
#cloundinary cloudinary://545544455465589:QfIPTF31t8i9Sa7iaF-afn5AHeQ@hbga3ltns
#serverfile.path = dir
product.image.url = http://localhost:8080/api/product/image/
category.image.url = http://localhost:8080/api/category/image/
logo.image.url=      http://localhost:8080/api/dashboard/image/settings/

# Allows Hibernate to generate SQL optimized for a particular DBMS


spring.datasource.url = jdbc:mysql://us-cdbr-iron-east-04.cleardb.net/heroku_b773a0762d40b53?reconnect=true
server.port=${PORT:8080}

# Username and password
spring.datasource.username = bcabbc8f4a2f42
spring.datasource.password = f3ec298a
